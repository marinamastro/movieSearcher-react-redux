{"version":3,"sources":["components/Header.js","components/Home.js","actions.js","components/Favs.js","components/Movie.js","App.js","serviceWorker.js","rootReducer.js","store.js","index.js"],"names":["HeaderStyled","styled","header","Header","to","MainStyled","main","Home","useState","title","setTitle","listMovies","useSelector","state","moviesListSearch","favs","moviesFav","dispatch","useDispatch","moviesFavSearch","movie","includes","className","type","placeholder","onChange","event","target","value","onClick","titulo","fetch","then","response","json","payload","map","x","key","imdbID","src","Poster","Title","Year","disabled","style","FavsStyled","section","Favs","Fragment","textAlign","length","color","removeFav","MovieStyled","Movie","props","id","match","params","movieDetail","useEffect","Type","Actors","Plot","Director","Genre","Released","Runtime","Writer","Production","Awards","App","path","exact","component","render","Boolean","window","location","hostname","initialState","rootReducer","action","Search","filter","console","log","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0b5032b0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst HeaderStyled = styled.header`\r\n@import url('https://fonts.googleapis.com/css2?family=Red+Rose:wght@700&display=swap');\r\n    position:sticky;\r\n    top:0;\r\n    z-index:2;\r\n    background-color:#0C151E;\r\n    display:flex;   \r\n    align-items:center;\r\n    flex-basis:100%;\r\n    border-bottom:2px solid white;\r\n\r\n    h1{\r\n        flex-basis:50%;\r\n        font-family: 'Red Rose', cursive;\r\n        color:#f37121;\r\n        margin-left:4rem\r\n    }\r\n    nav{\r\n        flex-basis:50%;\r\n        display:flex;\r\n        justify-content:flex-end;\r\n        margin-right:4rem\r\n    }\r\n    @media (max-width:560px){\r\n        flex-flow:row wrap;\r\n        justify-content:center;\r\n        h1{\r\n            margin-left:0;           \r\n        }\r\n        nav{\r\n            justify-content:center;\r\n            flex-basis:100%;\r\n            margin-right:0\r\n        }\r\n    }\r\n    a{\r\n        margin-right:1rem;\r\n        color:white;\r\n        text-decoration:none;\r\n        font-size:1.2rem\r\n    }\r\n    a:hover{\r\n        color:#f37121\r\n    }\r\n\r\n`\r\n\r\n\r\n\r\nexport default function Header (){\r\n    return (\r\n    <HeaderStyled>\r\n        <h1>moviesearcher</h1>\r\n        <nav>\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/favs\">Favorites</Link>\r\n        </nav>\r\n    </HeaderStyled>\r\n    )}","import React,{useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport {getMovies,moviesFav} from \"../actions\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst MainStyled = styled.main`\r\nmargin-bottom:2rem;\r\n    div.main{\r\n        margin-top:0;\r\n        min-height:100vh;\r\n        background-image:url(\"http://www.hdfondos.eu/preview/get_photo/193246/2048/1152\");\r\n    }\r\n    img{\r\n        position:relative;\r\n        max-width:100%;         \r\n    }\r\n    section.search{        \r\n        background-color:rgba(255,255,255,0.5);\r\n        padding:5rem;       \r\n        text-align:center;                \r\n    }\r\n    button{\r\n        max-height:50px;\r\n    }\r\n    input,button{\r\n        padding:1rem;      \r\n    }\r\n    div{\r\n        margin-top:4rem;\r\n        display:flex;\r\n        flex-flow:row wrap;\r\n        justify-content:center;   \r\n        align-items:center;    \r\n        div{\r\n            flex-basis:30%;\r\n            display:flex;\r\n            flex-flow:row wrap;\r\n            justify-content:center;\r\n            @media (max-width:560px){\r\n                flex-basis:80%;\r\n            }\r\n            h3{\r\n                flex-basis:100%;\r\n                text-align:center\r\n            }\r\n            h4{\r\n                text-align:center;\r\n                flex-basis:100%\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nfunction Home (){\r\n    const [title,setTitle] = useState(\"\");\r\n    const listMovies = useSelector(state=>state.moviesListSearch);   \r\n    const favs = useSelector(state=>state.moviesFav);\r\n    const dispatch = useDispatch(); \r\n\r\n   function handleChange (event){\r\n        setTitle(event.target.value)\r\n    }\r\n\r\n    function handleClick(){\r\n        dispatch(getMovies(title))\r\n    }\r\n\r\n    function addToFavorites (movie){\r\n        dispatch(moviesFav(movie))\r\n    }\r\n\r\n    function moviesFavSearch (movie){        \r\n        return favs.includes(movie)\r\n    }\r\n  \r\n    return (\r\n    <MainStyled>  \r\n        <div className=\"main\">           \r\n            <section className=\"search\">\r\n                <input type=\"text\" placeholder=\"Movie name\" onChange={handleChange}/>\r\n                <button onClick={handleClick}>Search</button>\r\n            </section>\r\n            </div>       \r\n        <div>\r\n            {listMovies.map(x=>{\r\n                return (\r\n                    <div key={x.imdbID}>\r\n                        <img src={x.Poster}/>\r\n                        <h3><Link to={`movie/${x.imdbID}`}>{x.Title} </Link></h3>\r\n                        <h4>{x.Year}</h4>\r\n                        <button onClick={()=>addToFavorites(x)}\r\n                         disabled={moviesFavSearch(x) ? true : false}\r\n                         style={moviesFavSearch(x) ? {\"backgroundColor\":\"gray\"} : {\"backgroundColor\":\"#f37121\"}}>\r\n                               {moviesFavSearch(x) ? \"Added\" : \"Add to favorites\"} \r\n                        </button>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    </MainStyled>\r\n  \r\n    )}\r\n\r\nexport default Home","export function getMovies(titulo) {\r\n    return function(dispatch) {\r\n      return fetch(\"http://www.omdbapi.com/?apikey=20dac387&s=\" + titulo)\r\n        .then(response => response.json())\r\n        .then(json => {       \r\n          dispatch({ type: \"GET_MOVIES\", payload: json });\r\n        });\r\n    };\r\n  }\r\n  export function moviesFav (movie){\r\n      return {\r\n          type: \"ADD_TO_FAVORITE\",\r\n          payload:movie\r\n      }\r\n  }\r\n  export function removeFav (movie){\r\n    return {\r\n        type: \"REMOVE_FAVORITE\",\r\n        payload:movie\r\n    }\r\n}\r\nexport function movieDetail(id) {\r\n    return function(dispatch) {\r\n      return fetch(\"http://www.omdbapi.com/?apikey=20dac387&i=\" + id)\r\n        .then(response => response.json())\r\n        .then(json => {       \r\n          dispatch({ type: \"MOVIE_DETAIL\", payload: json });\r\n        });\r\n    };\r\n  }\r\n\r\n  export function cleanDetail (){\r\n    return {\r\n        type: \"CLEAN_DETAIL\"        \r\n    }\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport {removeFav} from \"../actions\";\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst FavsStyled = styled.section`\r\ndisplay:flex;\r\nflex-flow:row wrap;\r\njustify-content:center;\r\nmargin:5%;\r\n    div{\r\n        flex-basis:30%;\r\n        margin-bottom:2rem;\r\n        h3,h4{\r\n            text-align:center\r\n        }\r\n        button{\r\n            display:block;\r\n            margin:auto;\r\n            padding:1rem;\r\n        }\r\n    }\r\n\r\n`\r\n\r\nfunction Favs () {\r\n    const favs = useSelector(state=>state.moviesFav);\r\n    const dispatch = useDispatch();\r\n\r\n    function handleClick (movie){\r\n        dispatch(removeFav(movie))\r\n    }\r\n    return (       \r\n        <React.Fragment>\r\n            <h1 style={{textAlign:\"center\"}}>My favorites movies</h1>\r\n            { favs.length===0 ? <h2 style={{textAlign:\"center\",color:\"#f37121\"}}>You still don't have favorites movies!</h2> : \r\n            <FavsStyled>\r\n                {favs.map(x=>{\r\n                    return (                       \r\n                            <div key={x.imdbID+1}>                               \r\n                                <img src={x.Poster}/>\r\n                                <h3>  <Link to={`movie/${x.imdbID}`}>{x.Title} </Link></h3>\r\n                                <h4>{x.Year}</h4>\r\n                                <button onClick={()=>handleClick(x)}>Remove from favorites</button>                               \r\n                            </div>                      \r\n                    )\r\n                })}\r\n            </FavsStyled>\r\n         }   \r\n          </React.Fragment>  \r\n    )\r\n}\r\n\r\nexport default Favs","import React,{useEffect} from \"react\";\r\nimport {movieDetail,cleanDetail} from \"../actions\";\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MovieStyled = styled.section`\r\n    display:flex;\r\n    justify-content:center;\r\n    text-align:center;\r\n    margin-top:2rem;\r\n    flex-flow:row wrap;\r\n    align-items:center;\r\n    margin-bottom:2rem;\r\n    div{\r\n        flex-basis:60%;\r\n        padding:1rem;\r\n        background-color:#f37121\r\n    }\r\n    article{      \r\n        flex-basis:60%;\r\n        padding:1rem;\r\n        background-color:#cedebd;\r\n        color:black;\r\n        display:flex;\r\n            img{\r\n                flex-basis:50%\r\n            }\r\n            p{\r\n                margin-left:1rem;\r\n                flex-basis:50%\r\n            }\r\n            @media (max-width:560px){         \r\n            display: flex;\r\n            flex-flow:row wrap;\r\n            justify-content:center;\r\n            img{\r\n                flex-basis:100%\r\n            }\r\n            p{\r\n                flex-basis:100%\r\n            }\r\n\r\n        } \r\n    }\r\n`\r\n\r\n\r\nfunction Movie (props) {  \r\n    const id = props.match.match.params.id;\r\n    const dispatch = useDispatch();\r\n    const movie=useSelector(state=>state.movieDetail);\r\n\r\n   useEffect(()=>{\r\n    dispatch(movieDetail(id));\r\n    return ()=>{\r\n        dispatch(cleanDetail())\r\n    }\r\n   },[id])\r\n\r\n    return (\r\n        <MovieStyled>\r\n            <div>{movie.Title}</div>\r\n            <article>\r\n                <img src={movie.Poster} />              \r\n                <p style={{textAlign:\"left\"}}> \r\n                    <strong>Type: </strong>{movie.Type}.<br/>   \r\n                    <strong>Actors: </strong>{movie.Actors}.<br/>\r\n                    <strong>Plot: </strong>{movie.Plot}.<br/>\r\n                    <strong>Director: </strong>{movie.Director}.<br/>\r\n                    <strong>Genre: </strong>{movie.Genre}.<br/>\r\n                    <strong>Released: </strong>{movie.Released}.<br/>\r\n                    <strong>Runtime: </strong>{movie.Runtime}.<br/>\r\n                    <strong>Writer: </strong>{movie.Writer}.<br/>\r\n                    <strong>Production: </strong>{movie.Production}.<br/>\r\n                    <strong>Awards: </strong>{movie.Awards}.<br/>\r\n                </p>\r\n            </article>\r\n        </MovieStyled>\r\n    )\r\n}\r\n\r\nexport default Movie","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport {Route} from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Favs from \"./components/Favs\";\nimport Movie from \"./components/Movie\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/favs\"  component={Favs} />\n      <Route path=\"/movie/:id\"  render={(match)=><Movie match={match}/>} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nconst initialState = {\r\n    moviesFav: [],\r\n    moviesListSearch:[],\r\n    movieDetail:{}\r\n}\r\n\r\nfunction rootReducer (state=initialState,action) {\r\n    switch(action.type){\r\n        case \"GET_MOVIES\":          \r\n            return {\r\n                ...state,\r\n                moviesListSearch: action.payload.Search\r\n            }\r\n        case \"ADD_TO_FAVORITE\":            \r\n            return {\r\n                ...state,\r\n                moviesFav:[...state.moviesFav,action.payload]\r\n            }\r\n        case \"REMOVE_FAVORITE\":             \r\n            const filter = state.moviesFav.filter(x=>x!==action.payload)         \r\n            return {\r\n                ...state,\r\n                moviesFav:filter\r\n            }\r\n        case \"MOVIE_DETAIL\":\r\n            console.log(action.payload)\r\n            return {\r\n                ...state,\r\n                movieDetail:action.payload\r\n            }\r\n        case \"CLEAN_DETAIL\":\r\n            return {\r\n                ...state,\r\n                movieDetail:{}\r\n            }\r\n    default: return state\r\n    }\r\n\r\n}\r\n\r\nexport default rootReducer","import {createStore,applyMiddleware} from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(thunk));\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>  \n ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}